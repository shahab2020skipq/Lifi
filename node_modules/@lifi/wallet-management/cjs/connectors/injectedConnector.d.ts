/// <reference types="node" />
import type { Token } from '@lifi/sdk';
import events from 'events';
import type { AccountData, InjectedConnectorConstructorArgs, Provider, Wallet } from '../types';
export declare class InjectedConnector extends events.EventEmitter implements Wallet {
    private windowProvider;
    isActivationInProgress: boolean;
    account: AccountData | undefined;
    name: string;
    icon: string;
    installed: () => boolean;
    constructor(constructorArgs: InjectedConnectorConstructorArgs, windowConnector?: Provider, autoConnect?: boolean);
    private initializeProvider;
    autoConnect(): Promise<void>;
    connect(): Promise<void>;
    disconnect(): void | Promise<void>;
    switchChain(chainId: number): Promise<boolean>;
    addChain(chainId: number): Promise<boolean>;
    addToken(chainId: number, token: Token): Promise<boolean>;
    private calcAccountData;
}
