import { jsx as _jsx } from "react/jsx-runtime";
import { Box, Collapse } from '@mui/material';
import { useFundsSufficiency, useGasRefuel, useGasSufficiency, } from '../../hooks';
import { useSettings } from '../../stores';
import { FundsSufficiencyMessage } from './FundsSufficiencyMessage';
import { GasSufficiencyMessage } from './GasSufficiencyMessage';
export const GasMessage = ({ route, ...props }) => {
    const { insufficientGas } = useGasSufficiency(route);
    const { insufficientFunds } = useFundsSufficiency(route);
    const { enabledAutoRefuel } = useSettings(['enabledAutoRefuel']);
    const { enabled, isLoading: isRefuelLoading } = useGasRefuel();
    const enabledRefuel = enabled && enabledAutoRefuel;
    const showGasSufficiencyMessage = insufficientGas?.length && !isRefuelLoading && !enabledRefuel;
    return (_jsx(Collapse, { timeout: 225, in: Boolean(insufficientFunds || showGasSufficiencyMessage), unmountOnExit: true, mountOnEnter: true, children: _jsx(Box, { ...props, children: insufficientFunds ? (_jsx(FundsSufficiencyMessage, {})) : showGasSufficiencyMessage ? (_jsx(GasSufficiencyMessage, { insufficientGas: insufficientGas })) : null }) }));
};
