import { useController, useFormContext } from 'react-hook-form';
import { useChains } from '../../hooks';
import { SwapFormKey, SwapFormKeyHelper } from '../../providers';
import { useChainOrder } from '../../stores';
export const useChainSelect = (formType) => {
    const chainKey = SwapFormKeyHelper.getChainKey(formType);
    const { field: { onChange, onBlur }, } = useController({ name: chainKey });
    const { setValue } = useFormContext();
    const { chains, isLoading } = useChains();
    const [chainOrder, setChainOrder] = useChainOrder();
    const getChains = () => {
        if (!chains) {
            return [];
        }
        const selectedChains = chainOrder
            .map((chainId) => chains.find((chain) => chain.id === chainId))
            .filter(Boolean);
        return selectedChains;
    };
    const setCurrentChain = (chainId) => {
        onChange(chainId);
        onBlur();
        setValue(SwapFormKeyHelper.getTokenKey(formType), '');
        setValue(SwapFormKeyHelper.getAmountKey(formType), '');
        setValue(SwapFormKey.TokenSearchFilter, '');
        setChainOrder(chainId);
    };
    return {
        chainOrder,
        chains,
        getChains,
        isLoading,
        setChainOrder,
        setCurrentChain,
    };
};
