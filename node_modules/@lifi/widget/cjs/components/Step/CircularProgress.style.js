"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CircularProgressPending = exports.CircularIcon = void 0;
const material_1 = require("@mui/material");
const CircularProgress_1 = require("@mui/material/CircularProgress");
const styles_1 = require("@mui/material/styles");
const circleAnimation = (0, styles_1.keyframes)({
    '0%': {
        strokeDashoffset: 129,
        transform: 'rotate(0)',
    },
    '50%': {
        strokeDashoffset: 56,
        transform: 'rotate(45deg)',
    },
    '100%': {
        strokeDashoffset: 129,
        transform: 'rotate(360deg)',
    },
});
const getStatusColor = (theme, status, substatus) => {
    switch (status) {
        case 'ACTION_REQUIRED':
            return (0, styles_1.alpha)(theme.palette.info.main, 0.12);
        case 'DONE':
            if (substatus === 'PARTIAL' || substatus === 'REFUNDED') {
                return (0, styles_1.alpha)(theme.palette.warning.main, 0.48);
            }
            return (0, styles_1.alpha)(theme.palette.success.main, 0.12);
        case 'FAILED':
            return (0, styles_1.alpha)(theme.palette.error.main, 0.12);
        default:
            return theme.palette.grey[theme.palette.mode === 'light' ? 300 : 800];
    }
};
exports.CircularIcon = (0, styles_1.styled)(material_1.Box, {
    shouldForwardProp: (prop) => !['status', 'substatus'].includes(prop),
})(({ theme, status, substatus }) => ({
    backgroundColor: ['ACTION_REQUIRED', 'DONE', 'FAILED'].includes(status)
        ? getStatusColor(theme, status, substatus)
        : theme.palette.background.paper,
    borderStyle: 'solid',
    borderColor: getStatusColor(theme, status, substatus),
    borderWidth: !['ACTION_REQUIRED', 'DONE', 'FAILED'].includes(status)
        ? 2
        : 0,
    display: 'grid',
    position: 'relative',
    placeItems: 'center',
    width: 32,
    height: 32,
    borderRadius: '50%',
}));
exports.CircularProgressPending = (0, styles_1.styled)(material_1.CircularProgress)(({ theme }) => ({
    color: theme.palette.mode === 'light'
        ? theme.palette.primary.main
        : theme.palette.primary.light,
    animationDuration: '3s',
    position: 'absolute',
    left: '-2px',
    [`.${CircularProgress_1.circularProgressClasses.circle}`]: {
        animationDuration: '2s',
        animationTimingFunction: 'linear',
        animationName: circleAnimation,
        strokeDasharray: 129,
        strokeDashoffset: 129,
        strokeLinecap: 'round',
        transformOrigin: '100% 100%',
    },
}));
