import { jsx as _jsx } from "react/jsx-runtime";
import { useFormState } from 'react-hook-form';
import { useNavigate } from 'react-router-dom';
import { SwapButton } from '../../components/SwapButton';
import { useSwapRoutes } from '../../hooks';
import { useSetExecutableRoute } from '../../stores';
import { navigationRoutes } from '../../utils';
export const MainSwapButton = () => {
    const navigate = useNavigate();
    const { isValid, isValidating } = useFormState();
    const setExecutableRoute = useSetExecutableRoute();
    const { routes: swapRoutes, isLoading, isFetching } = useSwapRoutes();
    const currentRoute = swapRoutes?.[0];
    const handleClick = async () => {
        if (currentRoute) {
            setExecutableRoute(currentRoute);
            navigate(navigationRoutes.swapExecution, {
                state: { routeId: currentRoute.id },
            });
        }
    };
    return (_jsx(SwapButton, { onClick: handleClick, hasRoute: Boolean(currentRoute), disabled: currentRoute && (isLoading || isFetching || isValidating || !isValid) }));
};
