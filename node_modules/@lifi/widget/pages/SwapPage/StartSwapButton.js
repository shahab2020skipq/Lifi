import { jsx as _jsx } from "react/jsx-runtime";
import { SwapButton } from '../../components/SwapButton';
import { useFundsSufficiency, useGasSufficiency, useSwapRoutes, } from '../../hooks';
import { useRouteExecutionStore } from '../../stores';
export const StartSwapButton = ({ onClick, route, text, loading, }) => {
    const { insufficientGas, isInitialLoading: isGasSufficiencyLoading } = useGasSufficiency(route);
    const { insufficientFunds, isInitialLoading: isFundsSufficiencyLoading } = useFundsSufficiency(route);
    return (_jsx(SwapButton, { onClick: onClick, text: text, hasRoute: Boolean(route), disabled: insufficientFunds || !!insufficientGas?.length, loading: isFundsSufficiencyLoading || isGasSufficiencyLoading || loading }));
};
export const StartIdleSwapButton = ({ onClick, route, text, loading, disabled, insurableRouteId, }) => {
    const routeExecution = useRouteExecutionStore((state) => state.routes[insurableRouteId]);
    const { isFetching } = useSwapRoutes({
        insurableRoute: routeExecution?.route,
    });
    return (_jsx(StartSwapButton, { onClick: onClick, text: text, route: route, disabled: disabled, loading: loading || isFetching, insurableRouteId: insurableRouteId }));
};
